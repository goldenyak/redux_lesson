{"ast":null,"code":"//  Установка redux и react-redux в проект  командой \"yarn add redux react-redux\"\nimport { combineReducers, createStore } from \"redux\";\nconst rootReducer = combineReducers({});\nconst store = createStore(rootReducer);\nexport default store;\n// {} 1. Определяется тип rootReducer. 2. Возвращается данный тип.\n// @ts-ignore\nwindow.store = store; // чтобы видеть в браузере","map":{"version":3,"sources":["/Users/admin/Downloads/redux_lesson/my-app/src/redux/store.tsx"],"names":["combineReducers","createStore","rootReducer","store","window"],"mappings":"AAAA;AAEA,SAAQA,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AAEA,MAAMC,WAAW,GAAGF,eAAe,CAAC,EAAD,CAAnC;AAEA,MAAMG,KAAK,GAAGF,WAAW,CAACC,WAAD,CAAzB;AAEA,eAAeC,KAAf;AAE0D;AAE1D;AACAC,MAAM,CAACD,KAAP,GAAeA,KAAf,C,CAAqB","sourcesContent":["//  Установка redux и react-redux в проект  командой \"yarn add redux react-redux\"\n\nimport {combineReducers, createStore} from \"redux\";\n\nconst rootReducer = combineReducers({});\n\nconst store = createStore(rootReducer);\n\nexport default store;\n\nexport type AppStateType = ReturnType<typeof rootReducer> // {} 1. Определяется тип rootReducer. 2. Возвращается данный тип.\n\n// @ts-ignore\nwindow.store = store // чтобы видеть в браузере"]},"metadata":{},"sourceType":"module"}