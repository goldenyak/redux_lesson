{"ast":null,"code":"import { combineReducers, createStore } from \"redux\";\nimport userReducer from \"./userReducer\";\nconst rootReducer = combineReducers({\n  users: userReducer\n});\nconst store = createStore(rootReducer);\nexport default store; // export type AppStateType = ReturnType<typeof rootReducer> // {} 1.Определяется тип rootReducer 2.Возвращается данный тип\n// @ts-ignore\n\nwindow.store = store; // чтобы видеть в браузере","map":{"version":3,"sources":["/Users/admin/Downloads/redux_lesson/my-app/src/redux/store.ts"],"names":["combineReducers","createStore","userReducer","rootReducer","users","store","window"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAGA,MAAMC,WAAW,GAAGH,eAAe,CAAC;AAChCI,EAAAA,KAAK,EAAEF;AADyB,CAAD,CAAnC;AAIA,MAAMG,KAAK,GAAGJ,WAAW,CAACE,WAAD,CAAzB;AAEA,eAAeE,KAAf,C,CAEA;AAEA;;AACAC,MAAM,CAACD,KAAP,GAAeA,KAAf,C,CAAqB","sourcesContent":["import {combineReducers, createStore} from \"redux\";\nimport userReducer from \"./userReducer\";\n\n\nconst rootReducer = combineReducers({\n    users: userReducer\n})\n\nconst store = createStore(rootReducer)\n\nexport default store\n\n// export type AppStateType = ReturnType<typeof rootReducer> // {} 1.Определяется тип rootReducer 2.Возвращается данный тип\n\n// @ts-ignore\nwindow.store = store // чтобы видеть в браузере"]},"metadata":{},"sourceType":"module"}