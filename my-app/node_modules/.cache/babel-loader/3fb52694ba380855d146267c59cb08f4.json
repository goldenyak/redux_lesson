{"ast":null,"code":"// КОНСТАНТЫ ДЛЯ ЭКШН-КРИЭЙТОРОВ\nconst GET_ALL_USERS = 'GET_ALL_USERS';\nconst SET_USER_NAME = 'SET_USER_NAME';\nlet initialState = [{\n  id: 1,\n  name: 'Egor',\n  age: 33\n}, {\n  id: 2,\n  name: 'Dima',\n  age: 20\n}, {\n  id: 3,\n  name: 'Oleg',\n  age: 28\n}, {\n  id: 4,\n  name: 'Kolya',\n  age: 25\n}, {\n  id: 5,\n  name: 'Vasya',\n  age: 30\n}];\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_USERS:\n      {\n        return [...state];\n      }\n\n    case SET_USER_NAME:\n      {\n        return [...state.map(user => user.id === action.userID ? { ...user,\n          name: action.newName\n        } : user)];\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport const setUserNameAC = (userID, newName) => ({\n  type: SET_USER_NAME,\n  userID: userID,\n  newName: newName\n});\nexport default userReducer; // Как один из способов типизации state //\n// type stateType = {\n//     id: number\n//     name: string\n//     age: number\n// }\n// let initialState: stateType[] = [\n//     {id: 1, name: 'Egor', age: 33},\n//     {id: 2, name: 'Dima', age: 20},\n//     {id: 3, name: 'Oleg', age: 28},\n//     {id: 4, name: 'Kolya', age: 25},\n//     {id: 5, name: 'Vasya', age: 30},\n// ]\n// export const useReducer = (state: stateType[], action: any): any => {} (Второй способ)","map":{"version":3,"sources":["/Users/admin/Downloads/redux_lesson/my-app/src/redux/userReducer.ts"],"names":["GET_ALL_USERS","SET_USER_NAME","initialState","id","name","age","userReducer","state","action","type","map","user","userID","newName","setUserNameAC"],"mappings":"AAAA;AACA,MAAMA,aAAa,GAAG,eAAtB;AACA,MAAMC,aAAa,GAAG,eAAtB;AAIA,IAAIC,YAAY,GAAG,CACf;AAACC,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,MAAd;AAAsBC,EAAAA,GAAG,EAAE;AAA3B,CADe,EAEf;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,MAAd;AAAsBC,EAAAA,GAAG,EAAE;AAA3B,CAFe,EAGf;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,MAAd;AAAsBC,EAAAA,GAAG,EAAE;AAA3B,CAHe,EAIf;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,OAAd;AAAuBC,EAAAA,GAAG,EAAE;AAA5B,CAJe,EAKf;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,IAAI,EAAE,OAAd;AAAuBC,EAAAA,GAAG,EAAE;AAA5B,CALe,CAAnB;;AAoBA,MAAMC,WAAW,GAAG,CAACC,KAAuB,GAAGL,YAA3B,EAAyCM,MAAzC,KAAkF;AAClG,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAL;AAAoB;AAChB,eAAO,CAAC,GAAGO,KAAJ,CAAP;AACH;;AACD,SAAKN,aAAL;AAAoB;AAChB,eAAO,CAAC,GAAGM,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYK,MAAM,CAACI,MAAnB,GAA4B,EAAC,GAAGD,IAAJ;AAAUP,UAAAA,IAAI,EAAEI,MAAM,CAACK;AAAvB,SAA5B,GAA8DF,IAAhF,CAAJ,CAAP;AACH;;AACD;AAAS;AACL,eAAOJ,KAAP;AACH;AATL;AAWH,CAZD;;AAcA,OAAO,MAAMO,aAAa,GAAG,CAACF,MAAD,EAAiBC,OAAjB,MAAsC;AAACJ,EAAAA,IAAI,EAAER,aAAP;AAAsBW,EAAAA,MAAM,EAAEA,MAA9B;AAAsCC,EAAAA,OAAO,EAAEA;AAA/C,CAAtC,CAAtB;AAEP,eAAeP,WAAf,C,CAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// КОНСТАНТЫ ДЛЯ ЭКШН-КРИЭЙТОРОВ\nconst GET_ALL_USERS = 'GET_ALL_USERS'\nconst SET_USER_NAME = 'SET_USER_NAME'\n\nexport type initialStateType = typeof initialState\n\nlet initialState = [\n    {id: 1, name: 'Egor', age: 33},\n    {id: 2, name: 'Dima', age: 20},\n    {id: 3, name: 'Oleg', age: 28},\n    {id: 4, name: 'Kolya', age: 25},\n    {id: 5, name: 'Vasya', age: 30},\n]\n\ntype getUsersType = {\n    type: typeof GET_ALL_USERS,\n}\n\ntype setUserName = {\n    type: typeof SET_USER_NAME,\n    userID: number,\n    newName: string,\n}\n\ntype actionType = getUsersType | setUserName\n\nconst userReducer = (state: initialStateType = initialState, action: actionType): initialStateType => {\n    switch (action.type) {\n        case GET_ALL_USERS: {\n            return [...state]\n        }\n        case SET_USER_NAME: {\n            return [...state.map(user => user.id === action.userID ? {...user, name: action.newName} : user)]\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport const setUserNameAC = (userID: number, newName: string) => ({type: SET_USER_NAME, userID: userID, newName: newName})\n\nexport default userReducer;\n\n\n\n\n\n\n// Как один из способов типизации state //\n\n// type stateType = {\n//     id: number\n//     name: string\n//     age: number\n// }\n\n// let initialState: stateType[] = [\n//     {id: 1, name: 'Egor', age: 33},\n//     {id: 2, name: 'Dima', age: 20},\n//     {id: 3, name: 'Oleg', age: 28},\n//     {id: 4, name: 'Kolya', age: 25},\n//     {id: 5, name: 'Vasya', age: 30},\n// ]\n\n// export const useReducer = (state: stateType[], action: any): any => {} (Второй способ)\n\n"]},"metadata":{},"sourceType":"module"}