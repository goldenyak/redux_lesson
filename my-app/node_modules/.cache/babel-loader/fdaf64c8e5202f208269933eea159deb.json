{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/redux_lesson/my-app/src/components/Users.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Users() {\n  _s();\n\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.users); // видит глобально из store\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", user.name, \" \", user.age, \" \"]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 33\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Users, \"J2Q6lSBLBzawirrCXH//4tVchgw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/admin/Downloads/redux_lesson/my-app/src/components/Users.tsx"],"names":["React","useDispatch","useSelector","Users","dispatch","users","state","map","user","name","age","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;;;AAIA,SAASC,KAAT,GAAiB;AAAA;;AAEb,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,KAAK,GAAGH,WAAW,CAAiCI,KAAK,IAAIA,KAAK,CAACD,KAAhD,CAAzB,CAHa,CAGmE;;AAGhF,sBACI;AAAA,cACKA,KAAK,CAACE,GAAN,CAAWC,IAAI,iBAAI;AAAA,sBAAqBA,IAAI,CAACC,IAA1B,OAAiCD,IAAI,CAACE,GAAtC;AAAA,OAAUF,IAAI,CAACG,EAAf;AAAA;AAAA;AAAA;AAAA,YAAnB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAXQR,K;UAEYF,W,EACHC,W;;;KAHTC,K;AAaT,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../redux/store\";\nimport {initialStateType} from \"../redux/userReducer\";\n\nfunction Users() {\n\n    const dispatch = useDispatch()\n    const users = useSelector<AppStateType, initialStateType>(state => state.users) // видит глобально из store\n    \n\n    return (\n        <div>\n            {users.map( user => <div key={user.id}> {user.name} {user.age} </div> )}\n        </div>\n    )\n}\n\nexport default Users;"]},"metadata":{},"sourceType":"module"}